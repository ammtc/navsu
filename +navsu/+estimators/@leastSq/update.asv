function complete = update(obj,epoch,gnssMeas,corrData)


PARAMS = obj.PARAMS;

%% Did the filter initialize successfully
% complete = false;
% just position, velocity, clock bias, clock drift
pos = nan(3,1);
vel = nan(3,1);
clockBias = [];
clockDrift = [];


%% If any values weren't provided directly, need to just try some least squares
% Did the filter initialize successfully

[state,dstate,~,~,covState,covdState,satsUsed] = navsu.ppp.lsSolGnss(gnssMeas,corrData,PARAMS);


pos0 = state(1:3);
vel0 = dstate(1:3);
epoch0 = gnssMeas.epochs;
clockBias0 = state(4:end);
clockDrift0 = dstate(4:end);


pos0 = pos0-R_b_e0*PARAMS.IMU_ARM;

constsUnique = unique(gnssMeas.constInds);


%% Populate various fields based on what we have
obj.pos = pos;

obj.vel = vel;

obj.clockBias  = clockBias;
obj.clockDrift = clockDrift;


obj.allSatsSeen = sortrows(satsUsed,2);


INDS_STATE = [];
INDS_STATE.ATTITUDE = 1:3;
INDS_STATE.VEL = 4:6;
INDS_STATE.POS = 7:9;
INDS_STATE.ACC_BIAS = 10:12;
INDS_STATE.W_BIAS = 13:15;

% Add the correct number of clock biases and drifts
lastInd = 15;
INDS_STATE.CLOCK_BIAS = (lastInd+1):(lastInd+length(constsUnique));
INDS_STATE.CLOCK_BIAS_CONSTS = constsUnique;
lastInd = lastInd+length(constsUnique);
INDS_STATE.CLOCK_DRIFT = (lastInd+1):(lastInd+length(constsUnique));
INDS_STATE.CLOCK_DRIFT_CONSTS = constsUnique;
lastInd = lastInd+length(constsUnique);

%% Initialize covariance and state


% Attitude
cov(INDS_STATE.ATTITUDE,INDS_STATE.ATTITUDE)       = eye(3) * PARAMS.SIGMA0.ATTITUDE^2;

% Velocity
if isempty(covdState)
    cov(INDS_STATE.VEL,INDS_STATE.VEL)             = eye(3) * PARAMS.SIGMA0.VEL^2;
else
    cov(INDS_STATE.VEL,INDS_STATE.VEL)             = covdState(1:3,1:3);
end

% Position
if isempty(covState)
    cov(INDS_STATE.POS,INDS_STATE.POS)             = eye(3) * PARAMS.SIGMA0.POS^2;
else
    cov(INDS_STATE.POS,INDS_STATE.POS)             = covState(1:3,1:3);
end

% IMU biases
cov(INDS_STATE.ACC_BIAS,INDS_STATE.ACC_BIAS)       = eye(3) * PARAMS.SIGMA0.ACC_BIAS^2;
cov(INDS_STATE.W_BIAS,INDS_STATE.W_BIAS)           = eye(3) * PARAMS.SIGMA0.W_BIAS^2;

% Clock bias
if isempty(covState)
    cov(INDS_STATE.CLOCK_BIAS,INDS_STATE.CLOCK_BIAS)   = eye(length(INDS_STATE.CLOCK_BIAS))*100^2;
else
    cov(INDS_STATE.CLOCK_BIAS,INDS_STATE.CLOCK_BIAS)   = covState(4:end,4:end);
end

% Clock rate
if isempty(covdState)
    cov(INDS_STATE.CLOCK_DRIFT,INDS_STATE.CLOCK_DRIFT) = eye(length(INDS_STATE.CLOCK_DRIFT))*100^2;
else
    cov(INDS_STATE.CLOCK_DRIFT,INDS_STATE.CLOCK_DRIFT) = covdState(4:end,4:end);
end

obj.cov = cov;

%% Initialize phase windup if we have PRN and constInds


%% Initialization completed successfully!
complete = true;


obj.initialized = true;
end















